*********USING DFS***TC = O(V+E) ****SC = O(V+V) **********
******ONLY FOR DAG - DIRECTED ACYCLIC GRAPH**********

-> IF THERE IS AN EDGE BETWEEN U AND V THEN AFTER THIS SORTING U APPEAR BEFORE V.

#include <bits/stdc++.h> 
void dfs(int node, vector<int>&vis, stack<int>&st, vector<int> adj[])
{
    vis[node] = 1;
    for(auto i:adj[node])
    {
        if(!vis[i])
        {
            dfs(i, vis, st, adj);
        }
    }
    st.push(node);
}
vector<int> topologicalSort(vector<vector<int>> &edges, int v, int e)  {
    vector<int> adj[v];
    for(int i=0;i<edges.size();i++)
    {
        int a = edges[i][0];
        int b = edges[i][1];
        adj[a].push_back(b);
    }

    stack<int> st;
    vector<int> vis(v, 0);
    for(int i=0;i<v;i++)
    {
        if(!vis[i])
        {
            dfs(i, vis, st, adj);
        }
    }
    vector<int> ans;
    while(!st.empty())
    {
        ans.push_back(st.top());
        st.pop();
    }

    return ans;
}
