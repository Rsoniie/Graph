******************USING BFS TC = O(5*N*M) && SC = O(3*N*M)*************************

vector < vector < int > > nearest(vector < vector < int >> & mat, int n, int m) {
    vector<vector<int>> vis(n, vector<int>(m, 0));
    vector<vector<int>> dis(n, vector<int>(m));
    queue<pair<pair<int, int>, int>> q;
    for(int i=0;i<n;i++)
    {
        for(int j=0;j<m;j++)
        {
            if(mat[i][j] == 1)
            {
                vis[i][j] = 1;
                q.push({{i, j}, 0});
            }
            else 
            {
                vis[i][j] = 0;
            }
        }
    }
    int delrow[]={1, 0 , -1, 0};
    int delcol[]={0, 1, 0, -1};

    while(!q.empty())
    {
        int row =  q.front().first.first;
        int col = q.front().first.second;
        int step = q.front().second;
        q.pop();
        dis[row][col] = step;
        for(int i=0;i<4;i++)
        {
            int nr = row+delrow[i];
            int nc = col+delcol[i];
            if(nr < n && nr >=0 && nc < m && nc >=0 && vis[nr][nc] == 0)
            {
                vis[nr][nc] = 1;
                q.push({{nr, nc}, step+1});
            }
        }
    }

    return dis;


}
