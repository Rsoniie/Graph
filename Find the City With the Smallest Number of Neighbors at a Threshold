*******USING FLOYD ALGORITHM ****TC = O(N^3) ****SC = O(N^2)**********
#include <bits/stdc++.h> 
int get(vector<int> v, int td)
{
   int cnt=0;
   for(int i=0;i<v.size();i++)
   {
	   if(v[i] <= td)
	   {
		   cnt++;
	   }
   }
   return cnt;
}
int findTheCity(int n, vector<vector<int>> &edges, int distanceThreshold) 
{
  vector<vector<int>> vv(n, vector<int> (n, 1e9));
  for(int i=0;i<edges.size();i++)
  {
	  int u = edges[i][0];
	  int v = edges[i][1];
	  int wt = edges[i][2];
	  vv[u][v] = wt;
	  vv[v][u] = wt;

  }
  for(int i=0;i<n;i++)
  {
	  vv[i][i] = 0;
  }
  for(int k=0;k<n;k++)
  {
	  for(int i=0;i<n;i++)
	  {
		  for(int j=0;j<n;j++)
		  {
			  if(vv[i][k] != 1e9 && vv[k][j] != 1e9)
			  {
				  vv[i][j] = min(vv[i][j], (vv[i][k]+ vv[k][j]));
			  }
		  }
	  }
   }
   int maxi = INT_MAX;
   int ans = 0;
   for(int i=0;i<n;i++)
   {
	   int x = get(vv[i], distanceThreshold);
	   if( x <= maxi)
	   {
		   maxi = x;
		   ans = i;
	   }
   }

   return ans;
}
