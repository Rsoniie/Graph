************TC = O(N^2) ******SC = O(N)*****************
#include <bits/stdc++.h> 
vector<pair<pair<int, int>, int>> 
calculatePrimsMST(int n, int m, 
vector<pair<pair<int, int>, int>> &g)
{
    // create adjacency list..
    vector<pair<int,int>> adj[n+1];
    for(int i=0;i<g.size();i++)
    {
        int u = g[i].first.first;
        int v = g[i].first.second;
        int w = g[i].second;
        adj[u].push_back({v,w});
        adj[v].push_back({u,w});
        
    }

    vector<int> key(n+1, INT_MAX);
    vector<bool> mst(n+1, false);
    vector<int> par(n+1, -1);
    key[1] = 0;
    par[1] = -1;
    

    for(int i=1;i<n;i++)
    {
        int mini = INT_MAX;
        int u;
        for(int v=1;v<=n;v++)
        {
            if(mst[v] == false && key[v] < mini)
            {
                u = v;
                mini = key[v];
            }
        }


        mst[u] = true;

        for(auto it:adj[u])
        {
            int v = it.first;
            int w = it.second;

            if(mst[v] == false && w < key[v])
            {
                par[v] = u;
                key[v] = w;
            }
        }

        
    }

  vector<pair<pair<int, int>, int>> ans;
  for(int i=2;i<=n;i++)
  {
      ans.push_back({{par[i], i}, key[i]});
  }

  return ans;
    
    
    
} 
----------------------------------------------------------------
*********APPROACH 2 USING PRIORITY_QUEUE *****TC = O(NLOGN) *******SC = O()

