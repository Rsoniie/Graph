************USING DJISKTRA ALGORITHM******TC = O(4*N*MNLOG(N*M)) ******SC = O(2*N*M)********

#include <bits/stdc++.h> 
int minimumTimeTakingPath(vector<vector<int>>& heights){
    int n = heights.size();
	int m  = heights[0].size();
	priority_queue<pair<int, pair<int, int>>, vector<pair<int, pair<int, int>>>, greater<pair<int, pair<int, int>>>> q;

	q.push({0, {0,0}});
	vector<vector<int>> dis(n, vector<int> (m, 1e9));
	dis[0][0] = 0;
	int delrow[] = {1,0,-1, 0};
	int delcol[] = {0, 1, 0, -1};
	while(!q.empty())
	{
		int diff = q.top().first;
		int row = q.top().second.first;
		int col = q.top().second.second;
		q.pop();
		if(row == n-1 && col == m-1)
		{
			return diff;
		}
		for(int i=0;i<4;i++)
		{
			int nr = row+delrow[i];
			int nc = col+delcol[i];
			if(nr >=0 && nr < n && nc >=0 && nc < m)
			{
				int newdis = max(abs(heights[nr][nc]-heights[row][col]), diff);
				if(newdis < dis[nr][nc])
				{
					dis[nr][nc] = newdis;
					q.push({newdis, {nr, nc}});
				}
			}
		}
	}

	return 0;
}
